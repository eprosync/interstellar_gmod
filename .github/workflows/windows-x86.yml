name: Windows x86

on:
  push:
    branches: [ "**" ]
  pull_request:

jobs:
  build-debug:
    name: Build Debug
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: repository
          submodules: recursive

      - name: Clean submodules (Local)
        shell: pwsh
        run: |
          cd repository
          git submodule foreach --recursive git reset --hard
          git submodule foreach --recursive git clean -fdx
          git submodule sync --recursive
          git submodule update --init --force --recursive

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2
        
      - name: Clone vcpkg
        shell: pwsh
        run: |
          if (-not (Test-Path "vcpkg")) {
            git clone https://github.com/microsoft/vcpkg.git
          }

      - name: Bootstrap vcpkg
        shell: pwsh
        run: |
          .\vcpkg\bootstrap-vcpkg.bat

      - name: Integrate vcpkg
        shell: pwsh
        run: .\vcpkg\vcpkg integrate install

      - name: Install dependencies
        shell: pwsh
        run: |
          $content = Get-Content repository/interstellar/vcpkg.conf | Out-String
          $packages = $content.Split(" ", [System.StringSplitOptions]::RemoveEmptyEntries)
          foreach ($package in $packages) {
            $trim = $package.Trim()
            Write-Host "Installing package: '$trim'"
            .\vcpkg\vcpkg install $trim --triplet x86-windows-static
          }
        env:
          VCPKG_DEFAULT_TRIPLET: x86-windows-static

      - name: Install Premake5
        shell: pwsh
        run: |
          if (-Not (Test-Path premake-core)) {
            git clone --depth=1 https://github.com/premake/premake-core.git
          }
          cd premake-core
          .\Bootstrap.bat vs2022
          Move-Item .\bin\release\premake5.exe ..\repository\
          cd ..

      - name: Initialize Premake
        shell: pwsh
        run: |
          cd repository
          .\premake5.exe vs2022
          cd ..
        env:
          VCPKG_ROOT: ${{ github.workspace }}/vcpkg

      - name: Build
        shell: pwsh
        run: |
          cd repository\build
          msbuild interstellar.sln /p:Configuration=Debug /p:Platform=Win32
          cd ..\..

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: debug_x86_windows
          path: repository\bin\x86\Debug\*
          if-no-files-found: warn
  
  build-release:
    name: Build Release
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: repository
          submodules: recursive

      - name: Clean submodules (Local)
        shell: pwsh
        run: |
          cd repository
          git submodule foreach --recursive git reset --hard
          git submodule foreach --recursive git clean -fdx
          git submodule sync --recursive
          git submodule update --init --force --recursive

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2
        
      - name: Clone vcpkg
        shell: pwsh
        run: |
          if (-not (Test-Path "vcpkg")) {
            git clone https://github.com/microsoft/vcpkg.git
          }

      - name: Bootstrap vcpkg
        shell: pwsh
        run: |
          .\vcpkg\bootstrap-vcpkg.bat

      - name: Integrate vcpkg
        shell: pwsh
        run: .\vcpkg\vcpkg integrate install

      - name: Install dependencies
        shell: pwsh
        run: |
          $content = Get-Content repository/interstellar/vcpkg.conf | Out-String
          $packages = $content.Split(" ", [System.StringSplitOptions]::RemoveEmptyEntries)
          foreach ($package in $packages) {
            $trim = $package.Trim()
            Write-Host "Installing package: '$trim'"
            .\vcpkg\vcpkg install $trim --triplet x86-windows-static
          }
        env:
          VCPKG_DEFAULT_TRIPLET: x86-windows-static

      - name: Install Premake5
        shell: pwsh
        run: |
          if (-Not (Test-Path premake-core)) {
            git clone --depth=1 https://github.com/premake/premake-core.git
          }
          cd premake-core
          .\Bootstrap.bat vs2022
          Move-Item .\bin\release\premake5.exe ..\repository\
          cd ..

      - name: Initialize Premake
        shell: pwsh
        run: |
          cd repository
          .\premake5.exe vs2022
          cd ..
        env:
          VCPKG_ROOT: ${{ github.workspace }}/vcpkg

      - name: Build
        shell: pwsh
        run: |
          cd repository\build
          msbuild interstellar.sln /p:Configuration=Release /p:Platform=Win32
          cd ..\..

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release_x86_windows
          path: repository\bin\x86\Release\*
          if-no-files-found: warn